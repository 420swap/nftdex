{"version":3,"sources":["bg.png","Web3Util.js","AppNav.js","ArtHome.js","PublishArt.js","MyWallet.js","ArtDetail.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","process","provider","providers","HttpProvider","getInstance","eth","net","getId","networkId","getAccounts","user","deployedNetwork","DigitalArtContract","networks","instance","Contract","abi","address","from","AppNav","props","handleNavClick","param","e","preventDefault","history","push","componentDidMount","contractInstance","methods","symbol","call","setState","name","bind","state","className","href","target","React","Component","withRouter","sectionStyle","width","minHeight","paddingBottom","backgroundImage","backgroundImg","backgroundSize","backgroundAttachment","ArtHome","loadDigitalArts","hasData","message","rows","columns","tokenIds","title","desc","price","publishDate","author","image","total","buyArt","this","findAllPendingArt","result","ids","newIds","counter","length","_total","row","Math","ceil","rowArr","Array","apply","map","Number","colArr","_tokenIds","_title","_desc","_price","_publishDate","_image","_author","idx","resetPendingArts","i","j","tokenId","findArt","art","priceInEther","utils","fromWei","priceInWei","toWei","send","gas","value","location","reload","style","color","marginTop","key","col","background","src","alt","whiteSpace","overflow","textOverflow","onClick","role","height","backgroundRepeat","PublishArt","getBalance","balanceInWei","balance","getNetworkType","networkType","imageChange","event","imageValue","categoryChange","categoryValue","submitHandler","description","authorName","date","imageUrl","localPrice","isNotEmpty","publishArt","changeHandler","onChangeHandler","files","maxSelectFile","checkMimeType","selectedFile","onClickHandler","data","FormData","append","axios","post","then","res","statusText","err","types","x","every","type","val","createTokenAndSellArt","onSubmit","id","placeholder","onChange","MyWallet","loadMyDigitalArts","status","sellTokenId","sellPrice","showModal","findMyArts","_status","resellArt","data-toggle","sellArt","data-target","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","submitArtSell","ArtDetail","match","params","selectedId","avaxPrice","Routes","exact","path","component","render","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56fd2db9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.d546efb2.png\";","import Web3 from 'web3';\r\nimport DigitalArtContract from './abi/DigitizedArt.json'\r\n\r\nexport const getWeb3 = () =>\r\n    new Promise((resolve, reject) => {\r\n    window.addEventListener(\"load\", async () => {\r\n    if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n        await window.ethereum.enable();\r\n        resolve(web3);\r\n        } catch (error) {\r\n        reject(error);\r\n        }\r\n    } else if (window.web3) {\r\n        // load metamask provider\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n    } else {\r\n        console.log(process.env.PUBLIC_URL)\r\n        const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n    }\r\n    });\r\n});\r\nexport const getInstance = async (web3) => {\r\n    const networkId = await web3.eth.net.getId();\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const deployedNetwork = DigitalArtContract.networks[networkId];\r\n    \r\n    window.instance = new web3.eth.Contract(\r\n        DigitalArtContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n        {\r\n            from: window.user\r\n        }\r\n    );\r\n    return window.instance;\r\n}","import React from \"react\";\r\nimport { withRouter} from 'react-router-dom';\r\nimport \"./App.css\";\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\n\r\nclass AppNav extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleNavClick = this.handleNavClick.bind(this);\r\n      this.state = { \r\n            name: '',\r\n            symbol: ''\r\n        };\r\n    }\r\n    handleNavClick = param => e => {\r\n      e.preventDefault();\r\n      this.props.history.push('/'+param)\r\n    };\r\n    componentDidMount = async () => {\r\n\r\n      const web3 = await getWeb3();\r\n      const contractInstance = await getInstance(web3);\r\n      window.user = (await web3.eth.getAccounts())[0];\r\n      const symbol = await contractInstance.methods.symbol().call()\r\n\r\n      this.setState({ symbol: symbol });\r\n            const name = await contractInstance.methods.name().call();\r\n\r\n      this.setState({ name: name });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark stylish-color\">\r\n        <div className=\"navbar-brand\">  \r\n            <a className=\"navbar-item text-white\" href=\"/\">  \r\n                <strong >420Swap <span className=\"hideOnMobile\">- NFT Marketplace on Avalanche Mainnet</span></strong> \r\n            </a>  \r\n        </div> \r\n      <form className=\"form-inline  my-2 my-lg-0 ml-auto\">\r\n        <a  className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\" href=\"/\">Art Gallery</a>\r\n        <a className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\" target=\"_blank\" href=\"https://420swap.app/#/publishArt\">Publish Your Art</a>\r\n        <a className=\"btn btn-outline-white btn-md my-2 my-sm-0 ml-3\" target=\"_blank\" href=\"https://420swap.app/#/myWallet\">My Wallet Info</a>\r\n        </form>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AppNav);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppNav from \"./AppNav\";\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\nimport backgroundImg from './bg.png';\r\n\r\n\r\nvar sectionStyle = {\r\n  width: \"100vw\",\r\n  minHeight:\"110vh\",\r\n  paddingBottom:\"150px\",\r\n  backgroundImage: `url(${backgroundImg})`,\r\n  backgroundSize: 'cover',\r\n\r\n    backgroundAttachment: 'fixed'\r\n};\r\n\r\nclass ArtHome extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      rows:[],\r\n      columns: [],\r\n      user: '',\r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      total: 0,\r\n      contractInstance: '',\r\n      user:''\r\n    };\r\n    this.buyArt = this.buyArt.bind(this);\r\n  }\r\n  resetPendingArts() {\r\n    this.setState({ \r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      total: 0\r\n    });\r\n  }\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    this.setState({ user: window.user });\r\n    this.setState({ contractInstance: contractInstance });\r\n    await this.loadDigitalArts(web3);\r\n\r\n  }\r\n  async loadDigitalArts(web3) {\r\n      try {\r\n        let ids;\r\n        const result = await this.state.contractInstance.methods.findAllPendingArt().call();\r\n        ids = result[0];\r\n        let newIds = [];\r\n\r\n        // remove 0 index\r\n        for(let counter =1;counter<ids.length;++counter){\r\n          if(ids[counter] !== \"10\"){\r\n            newIds[newIds.length]=ids[counter];\r\n          }\r\n        }\r\n\r\n\r\n        let _total = newIds.length;\r\n        if(newIds && _total>0) {\r\n          let row;\r\n          if(_total<=3) {\r\n            row = 1;\r\n          } else {\r\n            row = Math.ceil(_total/3);\r\n          }\r\n          let columns = 3;\r\n          this.setState({ rows: [], columns: [] });\r\n          let rowArr = Array.apply(null, {length: row}).map(Number.call, Number);\r\n          let colArr = Array.apply(null, {length: columns}).map(Number.call, Number);\r\n          this.setState({ rows: rowArr, columns: colArr });\r\n          let _tokenIds= [], _title =[],  _desc= [], _price= [], _publishDate= [],  _image =[], _author=[];\r\n          let idx =0;\r\n          this.resetPendingArts();\r\n          for(let i = 0; i<row; i++) {\r\n            for(let j = 0; j < columns; j++) {\r\n               if(idx<_total) {\r\n                 let tokenId= newIds[idx];\r\n                 const art = await this.state.contractInstance.methods.findArt(tokenId).call();\r\n                 const priceInEther = web3.utils.fromWei(art[3], 'ether');\r\n                 _tokenIds.push(art[0]);\r\n                 _title.push(art[1]);\r\n                 _desc.push(art[2]);\r\n                 _price.push(priceInEther);\r\n                 _publishDate.push(art[5]);\r\n                 _image.push(art[9]);\r\n                 _author.push(art[6]);\r\n               }\r\n              idx++;\r\n            }\r\n        }\r\n         \r\n          this.setState({ \r\n            tokenIds: _tokenIds,\r\n            title: _title,\r\n            desc: _desc,\r\n            price: _price,\r\n            publishDate: _publishDate,\r\n            author: _author,\r\n            image: _image,\r\n            total: _total\r\n          });\r\n          this.setState({ hasData: true });\r\n        } else {\r\n          this.setState({ hasData: false });\r\n        }\r\n \r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  async buyArt(tokenId, priceInEther) {\r\n    try {\r\n      const priceInWei =  window.web3.utils.toWei(priceInEther, 'ether');\r\n      await this.state.contractInstance.methods.buyArt(tokenId).send({\r\n          from: this.state.user, gas: 3000000, value: priceInWei\r\n      })\r\n      window.location.reload(); \r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasData) {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n\r\n          <div style={{color:\"white\"}}className=\"h1-responsive font-weight-bold text-center my-5\">\r\n              Buy/Sell Digital Art on the Avalanche Blockchain using 420Swap\r\n            </div>\r\n       \r\n            <div className=\"container\">\r\n               {this.state.rows.map((row, i) =>\r\n                <div className=\"row\" style={{marginTop:\"50px\"}}  key={i}>\r\n                  {this.state.columns.map((col, j) =>\r\n                    <div className=\"col-lg-4 col-md-12 mb-lg-0 mb-0\" key={j}>\r\n                        { i*3+j < this.state.total &&\r\n                            <div style={{background:\"white\"}}>\r\n                            <div className=\"view overlay rounded z-depth-3 mb-2\">\r\n                             <a target=\"_blank\" href={\"/#/art/\"+this.state.tokenIds[i*3+j]} > <img className=\"img-fluid\" src={this.state.image[i*3+j]} alt=\"Sample\"/></a>\r\n                            </div>\r\n                            <h6 className=\"pink-text font-weight-bold mb-1\"><i className=\"fas fa-map pr-2\"></i></h6>\r\n                            <div className=\"font-weight-bold orange-text deep-orange-lighter-hover\">NFT unique ID: {this.state.tokenIds[i*3+j]}</div>\r\n                            <h5 className=\"font-weight-bold mb-1\">{this.state.title[i*3+j]}</h5>\r\n                            <div className=\"dark-grey-text\">Price: {this.state.price[i*3+j]} AVAX</div>\r\n                            <p style={{whiteSpace: 'nowrap',overflow: 'hidden',textOverflow:'ellipsis'}}>by <span className=\"font-weight-bold\">{this.state.author[i*3+j]}</span>, {this.state.publishDate[i*3+j]}</p>\r\n                            \r\n                            <p className=\"alert alert-primary dark-grey-text\">{this.state.desc[i*3+j]}</p>\r\n                            <button className=\"btn btn-pink btn-rounded btn-md\" onClick={e => (e.preventDefault(),this.buyArt(this.state.tokenIds[i*3+j], this.state.price[i*3+j]))}>Buy</button>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                  )}\r\n                </div>\r\n              )}\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n\r\n            <div  style={{color:\"white\"}} className=\"h1-responsive font-weight-bold text-center my-5\">\r\n              Buy/Sell Digital Art on 420Swap\r\n            </div>\r\n            <p  style={{color:\"white\"}}  className=\"h1-responsive font-weight-bold text-center my-5\">\r\n            All the artworks on 420Swap are real authorized and trackable\r\n            </p>\r\n        \r\n       \r\n            \r\n            <div className=\"container\">\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                Publish your digital arts in blockchain today!\r\n              </div>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default ArtHome;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppNav from \"./AppNav\";\r\nimport axios from 'axios';\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\nimport backgroundImg from './bg.png';\r\n\r\nvar sectionStyle = {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    backgroundImage: `url(${backgroundImg})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover'\r\n};\r\n\r\nclass PublishArt extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.imageChange = this.imageChange.bind(this);\r\n      this.submitHandler = this.submitHandler.bind(this);\r\n      this.changeHandler = this.changeHandler.bind(this);\r\n      this.state = { \r\n            imageValue: 'images/upload-file.png',\r\n            description: '',\r\n            title: '', \r\n            authorName: '',\r\n            imageUrl:'',\r\n            price: null,\r\n            date:'',\r\n            user: '',\r\n            balance: 0,\r\n            contractInstance: '',\r\n            networkId:'',\r\n            networkType:'',\r\n            selectedFile: null,\r\n        };\r\n    }\r\n    componentDidMount = async () => {\r\n        const web3 = await getWeb3();\r\n        window.web3 = web3;\r\n        const contractInstance = await getInstance(web3);\r\n        window.user = (await web3.eth.getAccounts())[0];\r\n        const balanceInWei = await web3.eth.getBalance(window.user);\r\n        var balance = web3.utils.fromWei(balanceInWei, 'ether');\r\n        const networkId = await web3.eth.net.getId();\r\n        const networkType = await web3.eth.net.getNetworkType();\r\n        this.setState({ user: window.user });\r\n        this.setState({ balance: balance});\r\n        this.setState({ contractInstance: contractInstance });\r\n        this.setState({ networkId: networkId});\r\n        this.setState({ networkType: networkType});\r\n      }\r\n    imageChange = (event) => {\r\n        this.setState({ imageValue: event.target.value });\r\n    };\r\n    categoryChange = (event) => {\r\n        this.setState({ categoryValue: event.target.value });\r\n    };\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const {  imageValue, description, title, authorName, price, date,imageUrl} = this.state;\r\n        let localPrice = 0\r\n        if(price != null){\r\n            localPrice = price\r\n        }\r\n        if(this.isNotEmpty(title) &&this.isNotEmpty(description) &&this.isNotEmpty(authorName) \r\n            &&this.isNotEmpty(date)&&this.isNotEmpty(imageUrl) && this.isNotEmpty(localPrice) && imageUrl !== \"images/upload-file.png\") {\r\n            const priceInWei =  window.web3.utils.toWei(localPrice, 'ether');\r\n            this.publishArt(title, description, date, authorName, priceInWei, imageUrl);  \r\n        }\r\n    };\r\n    isNotEmpty(val) {\r\n        return val&& val.length>0;\r\n    }\r\n    changeHandler = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n            }, function(){ })\r\n    };\r\n    onChangeHandler= event=>{\r\n        var files = event.target.files\r\n        if(this.maxSelectFile(event) && this.checkMimeType(event)){\r\n           this.setState({\r\n           selectedFile: files[0]\r\n        })\r\n     }\r\n    }\r\n    onClickHandler = () => {\r\n        const data = new FormData()\r\n        data.append('file', this.state.selectedFile)\r\n        axios.post(\"http://localhost:8000/upload\", data, { \r\n           // receive two    parameter endpoint url ,form data\r\n       }).then(res => { // then print response status\r\n        console.log(res.statusText)\r\n        this.setState({ imageValue: \"images/\" + this.state.selectedFile.name });\r\n     })\r\n    }\r\n    maxSelectFile=(event)=>{\r\n        let files = event.target.files // create file object\r\n            if (files.length > 1) { \r\n               const msg = 'Only upload single image'\r\n               event.target.value = null // discard selected file\r\n               console.log(msg)\r\n              return false;\r\n          }\r\n        return true;\r\n     }\r\n     checkMimeType=(event)=>{\r\n        //getting file object\r\n        let files = event.target.files \r\n        //define message container\r\n        let err = ''\r\n        // list allow mime type\r\n       const types = ['image/png', 'image/jpeg', 'image/gif']\r\n        // loop access array\r\n        for(var x = 0; x<files.length; x++) {\r\n         // compare file type find doesn't matach\r\n             if (types.every(type => files[x].type !== type)) {\r\n             // create error message and assign to container   \r\n             err += files[x].type+' is not a supported format\\n';\r\n           }\r\n         };\r\n      \r\n       if (err !== '') { // if message not same old that mean has error \r\n            event.target.value = null // discard selected file\r\n            console.log(err)\r\n             return false; \r\n        }\r\n       return true;\r\n      \r\n      }\r\n    async publishArt(title, description, date, authorName, price, imageValue) {\r\n        try {\r\n            await this.state.contractInstance.methods.createTokenAndSellArt(title,description, date, authorName, price, imageValue).send({\r\n                from: this.state.user , gas: 3141592\r\n            })\r\n            this.props.history.push(`/home`)\r\n            window.location.reload(); \r\n        } catch (e) {console.log('Error', e)}\r\n    }\r\n\r\n//     render() {\r\n//       return (\r\n//         <div style={sectionStyle}>\r\n//             <AppNav></AppNav>\r\n//             <section className=\"mx-auto\" style={{ marginTop: '20px'}}>\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-md-2 mb-md-0 mb-5\"></div>\r\n//                     <div className=\"col-md-8 mb-md-0 mb-5\">\r\n//                         <div className=\"card\">\r\n//                             <div className=\"card-body\">\r\n//                                 <form className=\"text-center border border-light p-5\" onSubmit={this.submitHandler}>\r\n//                                     <p className=\"h4 mb-4\">Submit your digital art today.</p>\r\n//                                     <div className=\"row\">\r\n//                                         <div className=\"col-md-6 mb-md-0 mb-5\">\r\n//                                             <input className=\"form-control mb-4\" id=\"title\" name=\"title\" type=\"text\" placeholder=\"Title\" onChange={this.changeHandler}  value={this.state.title}/>\r\n//                                             <input className=\"form-control mb-4\" id=\"description\" name=\"description\"  type=\"text\" placeholder=\"Description\" onChange={this.changeHandler}  value={this.state.description}/>\r\n//                                            <input className=\"form-control mb-4\" id=\"authorName\" name=\"authorName\" type=\"text\" placeholder=\"Author Name\" onChange={this.changeHandler}  value={this.state.authorName}/>\r\n\r\n//                                         </div>\r\n//                                         <div className=\"col-md-6 mb-md-0 mb-5\">\r\n//                                            <input className=\"form-control mb-4\" id=\"price\" name=\"price\"  type=\"text\" placeholder=\"Price (AVAX)\"  onChange={this.changeHandler}  value={this.state.price}/>\r\n//                                            <input className=\"form-control mb-4\" id=\"date\" name=\"date\"  type=\"text\" placeholder=\"Date\" onChange={this.changeHandler}   value={this.state.date}/>\r\n//                                             <img className=\"imgBox z-depth-4 rounded\" alt=\"art\" src={this.state.imageValue} /><br></br><br></br>\r\n//                                             <input type=\"file\" name=\"file\" onChange={this.onChangeHandler}/>\r\n//                                             <br></br>\r\n//                                             <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\r\n//                                         </div>\r\n//                                     </div>\r\n//                                     <br></br><br></br>\r\n//                                     <div className=\"row\">\r\n//                                         <div className=\"col-md-5 mb-md-0 mb-5\"></div>\r\n//                                         <div className=\"col-md-2 mb-md-0 mb-5\"><button className=\"btn btn-info btn-block\" type=\"submit\">Publish</button></div>\r\n//                                         <div className=\"col-md-5 mb-md-0 mb-5\"></div>\r\n//                                     </div>\r\n                                    \r\n//                                 </form>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"col-md-2 mb-md-0 mb-5\"></div>\r\n//                 </div>\r\n\r\n//             </section>\r\n//         </div>\r\n\r\n//       );\r\n//     }\r\n//   }\r\n//   export default PublishArt;\r\n\r\n\r\nrender() {\r\n    return (\r\n        <div style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"mx-auto\" style={{ marginTop: '20px'}}>\r\n              <div className=\"row\">\r\n                  <div className=\"col-md-2 mb-md-0 mb-5\"></div>\r\n                  <div className=\"col-md-8 mb-md-0 mb-5\">\r\n                      <div className=\"card\">\r\n                          <div className=\"card-body\">\r\n                              <form className=\"text-center border border-light p-5\" onSubmit={this.submitHandler}>\r\n                                  <p className=\"h4 mb-4\">Submit your digital art today.</p>\r\n                                  <div className=\"row\">\r\n                                        <div className=\"col-md-3\"></div>\r\n                                      <div className=\"col-md-6 mb-md-0 mb-5\">\r\n                                          <input className=\"form-control mb-4\" id=\"title\" name=\"title\" type=\"text\" placeholder=\"Title\" onChange={this.changeHandler}  value={this.state.title}/>\r\n                                          <input className=\"form-control mb-4\" id=\"description\" name=\"description\"  type=\"text\" placeholder=\"Description\" onChange={this.changeHandler}  value={this.state.description}/>\r\n                                         <input className=\"form-control mb-4\" id=\"authorName\" name=\"authorName\" type=\"text\" placeholder=\"Author Name\" onChange={this.changeHandler}  value={this.state.authorName}/>\r\n                                         <input className=\"form-control mb-4\" id=\"imageUrl\" name=\"imageUrl\" type=\"text\" placeholder=\"NFT URL\" onChange={this.changeHandler}  value={this.state.imageUrl}/>\r\n                                         <input className=\"form-control mb-4\" id=\"price\" name=\"price\" type=\"text\" placeholder=\"Price (AVAX)\" onChange={this.changeHandler} value={this.state.price} />\r\n                                            <input className=\"form-control mb-4\" id=\"date\" name=\"date\" type=\"date\" placeholder=\"Date\" onChange={this.changeHandler} value={this.state.date} />\r\n                                            <img className=\"imgBox z-depth-4 rounded\" alt=\"art\" src={this.state.imageUrl} /><br></br><br></br>\r\n                                      </div>\r\n                                        <div className=\"col-md-3\"></div>\r\n                                      \r\n                                  </div>\r\n                                  {/* \r\n                                  <div className=\"row\">\r\n                                      <div className=\"col-md-3\"></div>\r\n                                        <div className=\"col-md-6 mb-md-0 mb-5\">\r\n                                            <input className=\"form-control mb-4\" id=\"price\" name=\"price\" type=\"text\" placeholder=\"Price (AVAX)\" onChange={this.changeHandler} value={this.state.price} />\r\n                                            <input className=\"form-control mb-4\" id=\"date\" name=\"date\" type=\"text\" placeholder=\"Date\" onChange={this.changeHandler} value={this.state.date} />\r\n                                            <img className=\"imgBox z-depth-4 rounded\" alt=\"art\" src={this.state.imageValue} /><br></br><br></br>\r\n                                            <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\r\n                                            <br></br>\r\n                                            <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\r\n                                        </div>\r\n                                        <div className=\"col-md-3\"></div>\r\n                                  </div>*/}\r\n                                  <br></br><br></br>\r\n                                  <div className=\"row\">\r\n                                      <div className=\"col-md-5 mb-md-0 mb-5\"></div>\r\n                                      <div className=\"col-md-2 mb-md-0 mb-5\"><button className=\"btn btn-info btn-block\" type=\"submit\">Publish</button></div>\r\n                                      <div className=\"col-md-5 mb-md-0 mb-5\"></div>\r\n\r\n                                  </div>\r\n                                   <div className=\"row\">\r\n                                      <div className=\"col-md-5 mb-md-0 mb-5\"></div>\r\n                                      <div className=\"col-md-2 mb-md-0 mb-5\">*If you cannot submit your NFT, try refreshing the page (press F5) and trying again</div>\r\n                                      <div className=\"col-md-5 mb-md-0 mb-5\"></div>\r\n                                      \r\n                                  </div>\r\n                              </form>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"col-md-2 mb-md-0 mb-5\"></div>\r\n              </div>\r\n\r\n          </section>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default PublishArt;","import React from 'react';\r\nimport './App.css';\r\nimport AppNav from \"./AppNav\";\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\nimport backgroundImg from './bg.png';\r\n\r\nvar sectionStyle = {\r\n  width: \"100vw\",\r\n  height: \"100vh\",\r\n  backgroundImage: `url(${backgroundImg})`,\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundSize: 'cover'\r\n};\r\n\r\n\r\nclass MyWallet extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      rows:[],\r\n      columns: [],\r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      status:[],\r\n      total: 0,\r\n      user: '',\r\n      balance: 0,\r\n      contractInstance: '',\r\n      networkId:'',\r\n      networkType:'',\r\n      sellTokenId: '',\r\n      sellPrice:0,\r\n      showModal: false\r\n    };\r\n    this.changeHandler = this.changeHandler.bind(this);\r\n  }\r\n  resetPendingArts() {\r\n    this.setState({ \r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      status:[],\r\n      total: 0\r\n    });\r\n  }\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    const balanceInWei = await web3.eth.getBalance(window.user);\r\n    var balance = web3.utils.fromWei(balanceInWei, 'ether');\r\n    const networkId = await web3.eth.net.getId();\r\n    const networkType = await web3.eth.net.getNetworkType();\r\n    this.setState({ user: window.user });\r\n    this.setState({ balance: balance});\r\n    this.setState({ contractInstance: contractInstance });\r\n    this.setState({ networkId: networkId});\r\n    this.setState({ networkType: networkType});\r\n    await this.loadMyDigitalArts(web3);\r\n\r\n  }\r\n  async loadMyDigitalArts(web3) {\r\n      try {\r\n        let ids;\r\n        const result = await this.state.contractInstance.methods.findMyArts().call();\r\n        let _total = result.length;\r\n        if(_total>0) {\r\n          let row;\r\n          if(_total<=3) {\r\n            row = 1;\r\n          } else {\r\n            row = Math.ceil(_total/3);\r\n          }\r\n          let columns = 3;\r\n          let rowArr = Array.apply(null, {length: row}).map(Number.call, Number);\r\n          let colArr = Array.apply(null, {length: columns}).map(Number.call, Number);\r\n          this.setState({ rows: rowArr, columns: colArr });\r\n          let _tokenIds= [], _title =[],  _desc= [], _price= [], _publishDate= [],  _image =[], _author=[], _status=[];\r\n          let idx =0;\r\n          this.resetPendingArts();\r\n          for(let i = 0; i<row; i++) {\r\n            for(let j = 0; j < columns; j++) {\r\n               if(idx<_total) {\r\n                 let tokenId= result[idx];\r\n                 const art = await this.state.contractInstance.methods.findArt(tokenId).call();\r\n                 const priceInEther = web3.utils.fromWei(art[3], 'ether');\r\n                 _tokenIds.push(art[0]);\r\n                 _title.push(art[1]);\r\n                 _desc.push(art[2]);\r\n                 if(art[4]==1) {\r\n                    _status.push(\"In selling\");\r\n                 } else {\r\n                    _status.push(\"Publish\");\r\n                 }\r\n                \r\n                 _price.push(priceInEther);\r\n                 _publishDate.push(art[5]);\r\n                 _image.push(art[9]);\r\n                 _author.push(art[6]);\r\n               }\r\n              idx++;\r\n            }\r\n        }\r\n         \r\n          this.setState({ \r\n            tokenIds: _tokenIds,\r\n            title: _title,\r\n            desc: _desc,\r\n            price: _price,\r\n            publishDate: _publishDate,\r\n            author: _author,\r\n            status: _status,\r\n            image: _image,\r\n            total: _total\r\n          });\r\n          this.setState({ hasData: true });\r\n        } else {\r\n          this.setState({ hasData: false });\r\n        }\r\n \r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  changeHandler = event => {\r\n    this.setState({\r\n        [event.target.name]: event.target.value\r\n        }, function(){ })\r\n   };\r\n   sellArt(tokenId) {\r\n    try {\r\n      //open  popup window\r\n      this.setState({ sellTokenId: tokenId, showModal: true });\r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n  async submitArtSell() {\r\n    try {\r\n      const priceInWei =  window.web3.utils.toWei(this.state.sellPrice, 'ether');\r\n       await this.state.contractInstance.methods.resellArt(this.state.sellTokenId, priceInWei).send({\r\n           from: this.state.user, gas: 6000000\r\n       })\r\n      window.location.reload(); \r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n  render() {\r\n    if (this.state.hasData) {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n            <div className=\"row mb-3 mt-3\">\r\n                    <div className=\"col-md-2 mb-md-0 mb-1\"></div>\r\n                    <div className=\"col-md-8 mb-md-0 mb-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body \">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">My Address:</span> {this.state.user}\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">NetworkId:</span> {this.state.networkId}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">Balance:</span> {this.state.balance} (AVAX)\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">NetworkType:</span> {this.state.networkType}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2 mb-md-0 mb-1\"></div>\r\n                </div>\r\n            <h5 className=\"h5-responsive font-weight-bold text-center my-3\" style={{color:\"white\"}}>My Wallet Arts</h5>\r\n            <div className=\"container\">\r\n               {this.state.rows.map((row, i) =>\r\n                <div className=\"row\" style={{marginTop:\"50px\"}} key={i}>\r\n                  {this.state.columns.map((col, j) =>\r\n                    <div className=\"col-lg-4 col-md-12 mb-lg-0 mb-0\" key={j}>\r\n                        { i*3+j < this.state.total &&\r\n                            <div style={{background:\"white\"}}>\r\n                            <div className=\"view overlay rounded z-depth-3 mb-2\">\r\n                              <img className=\"img-fluid\" src={this.state.image[i*3+j]} alt=\"Sample\"/>\r\n                            </div>\r\n                            <h6 className=\"pink-text font-weight-bold mb-1\"><i className=\"fas fa-map pr-2\"></i></h6>\r\n                            <div className=\"font-weight-bold orange-text deep-orange-lighter-hover\">NFT Unique ID: {this.state.tokenIds[i*3+j]}</div>\r\n                            <h5 className=\"font-weight-bold mb-1\">{this.state.title[i*3+j]}</h5>\r\n                            <div className=\"dark-grey-text\">{this.state.price[i*3+j]} (AVAX)</div>\r\n                            <p>by <span className=\"font-weight-bold\">{this.state.author[i*3+j]}</span>, {this.state.publishDate[i*3+j]}</p>\r\n                            \r\n                            <p className=\"alert alert-primary dark-grey-text\">{this.state.desc[i*3+j]}</p>\r\n                            { this.state.status[i*3+j]==='Publish' &&\r\n                                <button className=\"btn btn-pink btn-rounded btn-md\" data-toggle=\"modal\" onClick={e => (e.preventDefault(),this.sellArt(this.state.tokenIds[i*3+j]))} data-target=\".sell-modal\" >{this.state.status[i*3+j]}</button>\r\n                            }\r\n                           \r\n                        </div>\r\n                        }\r\n                    </div>\r\n\r\n                  )}\r\n                </div>\r\n              )}\r\n              </div>\r\n              <div className={`modal fade sell-modal ${this.props.showModal ? 'show' : ''}`} id=\"submitModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"submitModalLabel\"  aria-hidden=\"true\">\r\n                  <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                      <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"myLabel\">Sell Art</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                          </button>\r\n                      </div>\r\n                      <div className=\"modal-body\">\r\n                          <input className=\"form-control mb-4\" id=\"sellPrice\" name=\"sellPrice\"  type=\"text\" placeholder=\"Price (AVAX)\"  onChange={this.changeHandler}  value={this.state.sellPrice}/>\r\n                      </div>\r\n                      <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => (e.preventDefault(),this.submitArtSell())}>Submit</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n          <div className=\"row mb-3 mt-3\">\r\n                <div className=\"col-md-2 mb-md-0 mb-1\"></div>\r\n                    <div className=\"col-md-8 mb-md-0 mb-1\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body \">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">My Address:</span> {this.state.user}\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">NetworkId:</span> {this.state.networkId}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"row\">\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">Balance:</span> {this.state.balance} (AVAX)\r\n                                </div>\r\n                                <div className=\"col-md-6 mb-md-0\">\r\n                                    <span className=\"font-weight-bold blue-grey-text\">NetworkType:</span> {this.state.networkType}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.balance >0?null:<> Refresh the page (press F5) if the page remains blank for a couple of seconds</>}\r\n                    </div>\r\n\r\n                    <div className=\"col-md-2 mb-md-0 mb-1\">\r\n                     \r\n                    </div>\r\n                </div>\r\n\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default MyWallet;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AppNav from \"./AppNav\";\r\nimport { getWeb3, getInstance}  from \"./Web3Util\";\r\nimport backgroundImg from './bg.png';\r\n\r\n\r\nvar sectionStyle = {\r\n  width: \"100vw\",\r\n  paddingBottom:\"150px\",\r\n  backgroundImage: `url(${backgroundImg})`,\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundSize: 'cover'\r\n};\r\n\r\nclass ArtDetail extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasData: false,\r\n      message: \"\",\r\n      rows:[],\r\n      columns: [],\r\n      user: '',\r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      total: 0,\r\n      contractInstance: '',\r\n      user:'',\r\n      selectedId:props.match.params.selectedId,\r\n      art:null,\r\n      priceInEther:0\r\n    };\r\n    this.buyArt = this.buyArt.bind(this);\r\n  }\r\n  resetPendingArts() {\r\n    this.setState({ \r\n      tokenIds: [],\r\n      title: [],\r\n      desc: [],\r\n      price: [],\r\n      publishDate: [],\r\n      author: [],\r\n      image: [],\r\n      total: 0\r\n    });\r\n  }\r\n  componentDidMount = async () => {\r\n    const web3 = await getWeb3();\r\n    window.web3 = web3;\r\n    const contractInstance = await getInstance(web3);\r\n    window.user = (await web3.eth.getAccounts())[0];\r\n    this.setState({ user: window.user });\r\n    this.setState({ contractInstance: contractInstance });\r\n    await this.loadDigitalArts(web3);\r\n\r\n  }\r\n  async loadDigitalArts(web3) {\r\n      try {\r\n        const art = await this.state.contractInstance.methods.findArt(this.state.selectedId).call();\r\n        if(art != null){\r\n          let avaxPrice =  web3.utils.fromWei(art[3], 'ether')\r\n          this.setState({ hasData: true,art,avaxPrice});\r\n        } else {\r\n          this.setState({ hasData: false });\r\n        }\r\n \r\n    } catch (e) {console.log('Error', e)}\r\n  \r\n  }\r\n  async buyArt(tokenId, priceInEther) {\r\n    try {\r\n      const priceInWei =  window.web3.utils.toWei(priceInEther, 'ether');\r\n      await this.state.contractInstance.methods.buyArt(tokenId).send({\r\n          from: this.state.user, gas: 3000000, value: priceInWei\r\n      })\r\n      window.location.reload(); \r\n    } catch (e) {console.log('Error', e)}\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasData) {\r\n\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n\r\n          <div style={{color:\"white\"}}className=\"h1-responsive font-weight-bold text-center my-5\">\r\n              Creator: {this.state.art[7]}<br/>\r\n              Current owner: {this.state.art[8]}<br/>\r\n            </div>\r\n       \r\n            <div className=\"container\">\r\n                <div className=\"row\" style={{marginTop:\"50px\"}}  >\r\n                <div className=\"col-lg-4 col-md-12 mb-lg-0 mb-0\"></div>\r\n                    <div className=\"col-lg-4 col-md-12 mb-lg-0 mb-0\">\r\n                            <div style={{background:\"white\"}}>\r\n                            <div className=\"view overlay rounded z-depth-3 mb-2\">\r\n                              <img className=\"img-fluid\" src={this.state.art[9]} alt=\"Sample\"/>\r\n                            </div>\r\n                            <h6 className=\"pink-text font-weight-bold mb-1\"><i className=\"fas fa-map pr-2\"></i></h6>\r\n                            <div className=\"font-weight-bold orange-text deep-orange-lighter-hover\">NFT unique ID: {this.state.art[0]}</div>\r\n                            <h5 className=\"font-weight-bold mb-1\">{this.state.art[1]}</h5>\r\n                            <div className=\"dark-grey-text\">Price: {this.state.avaxPrice} AVAX</div>\r\n                            <p style={{whiteSpace: 'nowrap',overflow: 'hidden',textOverflow:'ellipsis'}}>by <span className=\"font-weight-bold\">{this.state.art[6]}</span>, {this.state.art[5]}</p>\r\n                            \r\n                            <p className=\"alert alert-primary dark-grey-text\">{this.state.art[2]}</p>\r\n                            {this.state.art[8] == this.state.art[7]?\r\n                              <button className=\"btn btn-pink btn-rounded btn-md\" onClick={e => (e.preventDefault(),this.buyArt(this.state.art[0], this.state.avaxPrice))}>Buy</button>\r\n                            :null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-12 mb-lg-0 mb-0\"></div>\r\n\r\n                </div>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\" style={sectionStyle}>\r\n          <AppNav></AppNav>\r\n          <section className=\"text-center\">\r\n\r\n            <div  style={{color:\"white\"}} className=\"h1-responsive font-weight-bold text-center my-5\">\r\n              Buy/Sell Digital Art on 420Swap\r\n            </div>\r\n            <p  style={{color:\"white\"}}  className=\"h1-responsive font-weight-bold text-center my-5\">\r\n            All the artworks on 420Swap are real authorized and trackable\r\n            </p>\r\n        \r\n       \r\n            \r\n            <div className=\"container\">\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                Publish your digital arts in blockchain today!\r\n              </div>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default ArtDetail;\r\n","import React from \"react\";\r\nimport {  Route, Switch } from \"react-router-dom\";\r\n\r\nimport ArtHome from './ArtHome';\r\nimport PublishArt from './PublishArt';\r\nimport MyWallet from './MyWallet';\r\nimport ArtDetail from './ArtDetail';\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={ArtHome} />\r\n        <Route exact path=\"/home\" component={ArtHome} />\r\n        <Route exact path=\"/publishArt\" component={PublishArt} />\r\n        <Route exact path=\"/myWallet\" component={MyWallet} />\r\n        <Route  path=\"/art/:selectedId\" component={ArtDetail} />\r\n      <Route\r\n        render={function() {\r\n          return <h1>Not Found</h1>;\r\n        }}\r\n      />\r\n    </Switch>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"../node_modules/react\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter as Router , HashRouter} from \"../node_modules/react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n     \r\n\r\n      <Router>\r\n      <div>\r\n        <main>\r\n        <HashRouter>\r\n          <Routes />\r\n          </HashRouter>\r\n        </main>\r\n      </div>\r\n      </Router>\r\n    \r\n\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}